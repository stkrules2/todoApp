{"version":3,"sources":["components/input-field-component/input-field-component.jsx","components/custom-button/custom-button.styles.jsx","components/custom-button/custom-button.component.jsx","components/todo/todo.component.jsx","redux/todo/todo-action.js","pages/homepage/homepage.component.jsx","components/signup-component/signup.component.jsx","redux/auth/auth.actions.js","firebase/firebase.utils.js","components/login-component/login.component.jsx","pages/loginPage/loginPage.component.jsx","components/header-component/header.component.jsx","App.js","reportWebVitals.js","redux/todo/todo-types.js","redux/todo/todo-reducer.js","redux/auth/auth.reducer.js","redux/root-reducer.js","index.js"],"names":["FormInput","handleChange","label","otherProps","className","onChange","value","length","toUpperCase","buttonStyles","css","invertedButtonStyles","googleSignInStyles","CustomButtonContainer","styled","button","props","isGoogleSignIn","inverted","CustomButton","children","compose","connect","state","tasks","firestore","ordered","uid","firebase","auth","dispatch","removeTask","task","getState","getFirebase","collection","doc","id","delete","then","type","catch","err","deleteTodo","firestoreConnect","ownProps","where","orderBy","Table","striped","map","todo","moment","date","toDate","calendar","Button","onClick","variant","HomePage","event","setState","input","target","handleSubmit","preventDefault","addDataTodo","this","currentUser","Container","onSubmit","name","to","React","Component","data","userId","add","Date","SignUp","email","password","confirmPassword","user","signUp","alert","required","creds","createUserWithEmailAndPassword","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","GoogleAuthProvider","setCustomParameters","promt","signInWithGoogle","signInWithPopup","createUserProfileDocument","userAuth","additionalData","a","userRef","get","exist","displayName","createdAt","set","console","log","Login","signIn","signInWithEmailAndPassword","loginPage","formChange","viewForm","btnText","Navbar","bg","Brand","as","Link","Toggle","aria-controls","Collapse","Nav","signOut","App","unsubscribeFromAuth","onAuthStateChanged","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_TODO","ADD_TODO_ERR","DELETE_TODO","todoReducer","action","actionTypes","authReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","rrfProps","config","createFirestoreInstance","AuthIsLoaded","useSelector","isLoaded","style","width","height","role","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0911b5d7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './input-field.styles.scss';\r\n\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\r\n    <div className='todoWidth group'>\r\n        <input className=\"form-input\" onChange={handleChange} {...otherProps} />\r\n        {\r\n            label ?\r\n                (<label className={`${otherProps.value.length ? 'shrink' : ''}  form-input-label`}>\r\n                    {label.toUpperCase()}\r\n                </label>)\r\n                : null\r\n        }\r\n    </div>\r\n)\r\n\r\nexport default FormInput;","import styled, { css } from 'styled-components';\r\n\r\nconst buttonStyles = css`\r\n    background-color: black;\r\n    color: white;\r\n    border: none;\r\n    &:hover {\r\n        background-color: white;\r\n        color: black;\r\n        border: 1px solid black;\r\n    }\r\n`\r\n\r\nconst invertedButtonStyles = css`\r\n    background-color: white;\r\n    color: black;\r\n    border: 1px solid black;\r\n\r\n    &:hover {\r\n        background-color: black;\r\n        color: white;\r\n        border: none;\r\n    }\r\n`\r\n\r\nconst googleSignInStyles = css`\r\n    background-color: #4285f4;\r\n    color: white;\r\n    border: none;\r\n    &:hover {\r\n        background-color: #357ae8;\r\n        border: none !important;\r\n    }\r\n`\r\n\r\nconst getButtonStyles = props => {\r\n    if (props.isGoogleSignIn) {\r\n        return googleSignInStyles;\r\n    }\r\n    return props.inverted ? invertedButtonStyles : buttonStyles;\r\n}\r\n\r\nexport const CustomButtonContainer = styled.button`\r\n    min-width: 165px;\r\n    width: auto;\r\n    height: 50px;\r\n    letter-spacing: 0.5px;\r\n    line-height: 50px;\r\n    padding: 0 35px 0 35px;\r\n    font-size: 15px;\r\n    text-transform: uppercase;\r\n    font-family: 'Open Sans Condensed';\r\n    font-weight: bolder;\r\n    cursor: pointer;\r\n\r\n    ${getButtonStyles}\r\n`","import React from \"react\";\r\n\r\nimport { CustomButtonContainer } from './custom-button.styles';\r\n\r\nconst CustomButton = ({ children, ...props }) => (\r\n    <CustomButtonContainer className='custom-button'{...props}>\r\n        {children}\r\n    </CustomButtonContainer>\r\n);\r\n\r\nexport default CustomButton;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\n\r\nimport { Button, Table } from 'react-bootstrap';\r\n\r\nimport { deleteTodo } from '../../redux/todo/todo-action';\r\n\r\nimport './todo.styles.scss';\r\n\r\nconst Todos = ({ tasks, removeTask }) => {\r\n    const handleRemove = (task) => {\r\n        removeTask(task)\r\n    }\r\n    return (\r\n        <div className='todo-container'>\r\n            <Table striped>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Task</th>\r\n                        <th>Created At</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    {\r\n                        tasks ? tasks.map(todo => {\r\n                            return (\r\n                                <tr className='todo-list' key={todo.id}>\r\n                                    <td>{todo.task.toUpperCase()}</td>\r\n                                    <td>{moment(todo.date.toDate()).calendar()}</td>\r\n                                    <td><Button onClick={() => { handleRemove(todo) }} variant='danger'>Delete</Button></td>\r\n                                </tr>\r\n                            )\r\n                        }) : <tr>No data bummer</tr>\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        removeTask: task => dispatch(deleteTodo(task))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const tasks = state.firestore.ordered.tasks;\r\n    return {\r\n        tasks: tasks,\r\n        uid: state.firebase.auth.uid\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect(ownProps => [{\r\n        collection: 'tasks',\r\n        where: ['userId', '==', ownProps.uid],\r\n        orderBy: ['date', 'desc']\r\n    }\r\n    ])\r\n)(Todos);","export const todoAdd = (task) => {\r\n\t//console.log(data);\r\n\treturn (dispatch, getState, { getFirebase }) => {\r\n\t\tconst firestore = getFirebase().firestore();\r\n\t\tconst userId = getState().firebase.auth.uid;\r\n\t\tfirestore\r\n\t\t\t.collection('tasks')\r\n\t\t\t.add({ task, date: new Date(), userId: userId })\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'ADD_TODO',\r\n\t\t\t\t\ttask,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'ADD_TODO_ERR',\r\n\t\t\t\t\terr,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t// type: actionTypes.ADD_TODO,\r\n\t\t// payload: data,\r\n\t};\r\n};\r\nexport const deleteTodo = (task) => {\r\n\treturn (dispatch, getState, { getFirebase }) => {\r\n\t\tconst firestore = getFirebase().firestore();\r\n\t\tfirestore\r\n\t\t\t.collection('tasks')\r\n\t\t\t.doc(task.id)\r\n\t\t\t.delete()\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'DELETE_TODO',\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'DELETE_TODO_ERR',\r\n\t\t\t\t\terr,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t};\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport FormInput from '../../components/input-field-component/input-field-component';\r\nimport CustomButton from '../../components/custom-button/custom-button.component';\r\nimport Todos from '../../components/todo/todo.component';\r\nimport { todoAdd } from \"../../redux/todo/todo-action\";\r\nimport './homepage.styles.scss';\r\n\r\n\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            input: '',\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ input: event.target.value });\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.addDataTodo(this.state.input);\r\n        this.setState({ input: '' });\r\n    }\r\n    render() {\r\n        const { currentUser } = this.props;\r\n        if (!currentUser) return <Redirect to='/login' />\r\n        return (\r\n            <Container>\r\n                <form className='todo-form' onSubmit={this.handleSubmit}>\r\n                    <FormInput type='text' name='todo' value={this.state.input} label='To Do' onChange={this.handleChange}></FormInput>\r\n                    <CustomButton type='submit'>Submit</CustomButton>\r\n                </form>\r\n                <Todos />\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const uid = state.firebase.auth.uid;\r\n    return {\r\n        currentUser: uid\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addDataTodo: data => dispatch(todoAdd(data)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","import React from 'react';\r\nimport { signUp } from '../../redux/auth/auth.actions';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from \"../input-field-component/input-field-component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport './signup.styles.scss';\r\n\r\nclass SignUp extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { value, name } = event.target;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const { email, password, confirmPassword } = this.state;\r\n        if (password !== confirmPassword) {\r\n            alert(\"passwords don't match\");\r\n            return;\r\n        }\r\n        const user = { email, password };\r\n        this.props.signUp(user);\r\n    }\r\n    render() {\r\n        const { email, password, confirmPassword } = this.state;\r\n        return (<div className='sign-up'>\r\n            <h3>Enter your details to get a new account</h3>\r\n            <form onSubmit={this.handleSubmit}>\r\n                <FormInput type='email' name='email' value={email} onChange={this.handleChange} label='Email' required></FormInput>\r\n                <FormInput type='password' name='password' value={password} onChange={this.handleChange} label='Password' required></FormInput>\r\n                <FormInput type='password' name='confirmPassword' value={confirmPassword} onChange={this.handleChange} label='Confirm Password' required></FormInput>\r\n                <div className=\"buttons\">\r\n                    <CustomButton type=\"submit\">Sign Up</CustomButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signUp: (creds) => dispatch(signUp(creds))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);","export const signIn = (creds) => {\r\n\treturn (dispatch, getState, { getFirebase }) => {\r\n\t\tconst firebase = getFirebase();\r\n\r\n\t\tfirebase\r\n\t\t\t.auth()\r\n\t\t\t.signInWithEmailAndPassword(creds.email, creds.password)\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch({ type: 'SIGN_IN' });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tdispatch({ type: 'SIGN_IN_ERR' });\r\n\t\t\t});\r\n\t};\r\n};\r\n\r\nexport const signUp = (creds) => {\r\n\treturn (dispatch, getState, { getFirebase }) => {\r\n\t\tconst firebase = getFirebase();\r\n\t\tfirebase\r\n\t\t\t.auth()\r\n\t\t\t.createUserWithEmailAndPassword(creds.email, creds.password)\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch({ type: 'SIGN_UP' });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tdispatch({ type: 'SIGN_UP_ERR' }, err);\r\n\t\t\t});\r\n\t};\r\n};\r\n","import firebase from 'firebase/app';\r\n\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n\tapiKey: 'AIzaSyA57drgGe8JooPpemgihzWHb-gzlTNfORA',\r\n\tauthDomain: 'digital-era-exampleappone.firebaseapp.com',\r\n\tdatabaseURL: 'https://digital-era-exampleappone.firebaseio.com',\r\n\tprojectId: 'digital-era-exampleappone',\r\n\tstorageBucket: 'digital-era-exampleappone.appspot.com',\r\n\tmessagingSenderId: '1026983541297',\r\n\tappId: '1:1026983541297:web:a7f7fb2475af14216a7310',\r\n\tmeasurementId: 'G-1P26T13RF8',\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ promt: 'select_account' });\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n\tif (!userAuth) return;\r\n\tconst userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n\tconst snapShot = await userRef.get;\r\n\r\n\tif (!snapShot.exist) {\r\n\t\tconst { displayName, email } = userAuth;\r\n\t\tconst createdAt = new Date();\r\n\r\n\t\ttry {\r\n\t\t\tawait userRef.set({\r\n\t\t\t\tdisplayName,\r\n\t\t\t\temail,\r\n\t\t\t\tcreatedAt,\r\n\t\t\t\t...additionalData,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\treturn userRef;\r\n};\r\n\r\nexport default firebase;\r\n","import React from 'react';\r\n\r\nimport FormInput from \"../input-field-component/input-field-component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport { signInWithGoogle } from '../../firebase/firebase.utils';\r\n\r\nimport { signIn } from '../../redux/auth/auth.actions';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './login.styles.scss';\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { value, name } = event.target;\r\n        this.setState({ [name]: value });\r\n    };\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='login'>\r\n                <h3>Enter your credientials to sign in</h3>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={this.state.email}\r\n                        required\r\n                        handleChange={this.handleChange}\r\n                        label=\"email\"\r\n                    />\r\n                    <FormInput\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={this.state.password}\r\n                        required\r\n                        handleChange={this.handleChange}\r\n                        label=\"password\"\r\n                    />\r\n                    <div className=\"buttons\">\r\n                        <CustomButton type=\"submit\">Sign In</CustomButton>\r\n                        <CustomButton onClick={signInWithGoogle} isGoogleSignIn>\r\n                            {\"\"}Sign In Google{\"\"}\r\n                        </CustomButton>\r\n                        <CustomButton isGoogleSignIn>\r\n                            {\"\"}Sign In Facebook{\"\"}\r\n                        </CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Login);","import React from 'react';\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport SignUp from '../../components/signup-component/signup.component';\r\nimport Login from '../../components/login-component/login.component';\r\nimport CustomButton from \"../../components/custom-button/custom-button.component\";\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport './loginPage.styles.scss';\r\n\r\nclass loginPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            btnText: 'Create a new account',\r\n            viewForm: true\r\n        }\r\n    }\r\n\r\n    formChange = () => {\r\n        (this.state.viewForm) ?\r\n            this.setState({ viewForm: false, btnText: 'Login maybe' }) :\r\n            this.setState({\r\n                btnText: 'Create a new account',\r\n                viewForm: true\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { uid } = this.props;\r\n        if (uid) return <Redirect to='/' />\r\n        return (\r\n            <div className='LoginPage'>\r\n                <CustomButton onClick={this.formChange}>{this.state.btnText}</CustomButton>\r\n                {(this.state.viewForm) ?\r\n                    <Login /> : <SignUp />\r\n                }\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const uid = state.firebase.auth.uid;\r\n    return {\r\n        uid: uid\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(loginPage);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nimport { auth } from '../../firebase/firebase.utils';\r\nimport { connect } from 'react-redux';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Header = ({ currentUser }) => {\r\n    return (\r\n        < Navbar bg=\"dark\" variant=\"dark\" >\r\n            <Navbar.Brand as={Link} to='/'>React Bootstrap</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                {\r\n                    currentUser ?\r\n                        <Nav className=\"ml-auto\">\r\n                            <Nav.Link onClick={() => auth.signOut()}>Logout</Nav.Link>\r\n                        </Nav> :\r\n                        <Nav className=\"ml-auto\">\r\n                            <Nav.Link as={Link} to='/login'>Login</Nav.Link>\r\n                        </Nav>\r\n                }\r\n\r\n            </Navbar.Collapse>\r\n        </Navbar >\r\n    )\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const uid = state.firebase.auth.uid;\r\n    return {\r\n        currentUser: uid\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { Container } from 'react-bootstrap';\n\nimport HomePage from './pages/homepage/homepage.component';\nimport loginPage from './pages/loginPage/loginPage.component';\n\nimport Header from './components/header-component/header.component';\n\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\n\nimport './App.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends React.Component {\n\tunsubscribeFromAuth = null;\n\n\tcomponentDidMount() {\n\t\tthis.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n\t\t\tif (userAuth) {\n\t\t\t\tawait createUserProfileDocument(userAuth);\n\t\t\t}\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.unsubscribeFromAuth();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Header />\n\t\t\t\t<Container>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" component={HomePage} />\n\t\t\t\t\t\t<Route exact path=\"/login\" component={loginPage} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const ADD_TODO = 'ADD_TODO';\r\nexport const ADD_TODO_ERR = 'ADD_TODO_ERR';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const DELETE_TODO_ERR = 'DELETE_TODO_ERR';\r\n","import * as actionTypes from './todo-types';\r\n\r\nconst todoReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.ADD_TODO:\r\n\t\t\treturn state;\r\n\t\tcase actionTypes.ADD_TODO_ERR:\r\n\t\t\treturn state;\r\n\t\tcase actionTypes.DELETE_TODO:\r\n\t\t\treturn state;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default todoReducer;\r\n","const authReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'SIGN_IN':\r\n\t\t\treturn state;\r\n\t\tcase 'SIGN_IN_ERR':\r\n\t\t\treturn state;\r\n\t\tcase 'SIGN_UP':\r\n\t\t\treturn state;\r\n\t\tcase 'SIGN_UP_ERR':\r\n\t\t\treturn state;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default authReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport todoReducer from './todo/todo-reducer';\r\nimport authReducer from './auth/auth.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tfirebase: firebaseReducer,\r\n\tfirestore: firestoreReducer,\r\n\ttask: todoReducer,\r\n\tauth: authReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './redux/root-reducer';\nimport thunk from 'redux-thunk';\nimport { getFirebase, ReactReduxFirebaseProvider } from 'react-redux-firebase';\nimport firebase from './firebase/firebase.utils';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport { useSelector } from 'react-redux';\nimport { isLoaded } from 'react-redux-firebase';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk.withExtraArgument({ getFirebase })));\n\nconst rrfProps = {\n\tfirebase,\n\tconfig: {},\n\tdispatch: store.dispatch,\n\tcreateFirestoreInstance,\n};\n\nfunction AuthIsLoaded({ children }) {\n\tconst auth = useSelector((state) => state.firebase.auth);\n\tif (!isLoaded(auth))\n\t\treturn (\n\t\t\t<div className=\"text-center\">\n\t\t\t\t<div className=\"spinner-grow text-primary\" style={{ width: '7rem', height: '7rem' }} role=\"status\">\n\t\t\t\t\t<span className=\"sr-only\">Loading...</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\treturn children;\n}\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<ReactReduxFirebaseProvider {...rrfProps}>\n\t\t\t\t<BrowserRouter>\n\t\t\t\t\t<AuthIsLoaded>\n\t\t\t\t\t\t<App />\n\t\t\t\t\t</AuthIsLoaded>\n\t\t\t\t</BrowserRouter>\n\t\t\t</ReactReduxFirebaseProvider>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}